name: 'Magento 2 Coding Standard'
author: '121eCommerce LLC'
description: 'Performs PHP static code analysis with the Magento 2 Coding Standard'
branding:
  icon: 'code'
  color: 'green'
inputs:
  php-version:
    description: 'PHP Version'
    required: false
    default: '8.1'
  php-extensions:
    description: 'PHP Extensions'
    required: false
    default: 'gd, bcmath, soap, pdo_mysql, ctype, curl, dom, hash, iconv, intl, mbstring, openssl, simplexml, xsl, sockets, zip'
  composer-version:
    description: 'Composer Version'
    required: false
    default: 'v2'
  magento-coding-standard-version:
    description: 'Magento Coding Standard Composer Version.'
    required: false
    default: '*'
  path-to-code:
    description: 'Relative path to the code.'
    required: false
    default: '/'
  phpcs-extensions:
    description: 'List of file extensions to check.'
    required: false
    default: 'php,phtml,graphqls/GraphQL,less/CSS,xml,js/PHP'
  phpcs-ruleset:
    description: 'Relative path to ruleset file.'
    required: false
    default: ''
  skip-cache:
    description: 'Skip composer cache.'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4
    - name: Setup PHP Action
      uses: shivammathur/setup-php@v2
      with:
        coverage: none
        php-version: ${{ inputs.php-version }}
        tools: composer:${{ inputs.composer-version }}
        extensions: ${{ inputs.php-extensions }}
    - name: Get Composer global directories
      id: composer
      run: |
        echo "dir-cache=$(composer global config cache-files-dir --absolute --quiet)" >> $GITHUB_OUTPUT
        echo "dir-bin=$(composer global config bin-dir --absolute --quiet)" >> $GITHUB_OUTPUT
        echo "dir-vendor=$(composer global config vendor-dir --absolute --quiet)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Restore Composer Cache
      if:  ${{ inputs.skip-cache != 'true' }}
      id: cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ steps.composer.outputs.dir-cache }}
        key: ${{ runner.os }};magento-coding-standard=${{ inputs.magento-coding-standard-version }};
    - name: Require Magento Coding Standard
      id: coding-standard
      run: |
        composer global config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer global require dealerdirect/phpcodesniffer-composer-installer:* --no-update
        composer global require magento/magento-coding-standard:${{ inputs.magento-coding-standard-version }} --no-update
        composer global update dealerdirect/phpcodesniffer-composer-installer magento/magento-coding-standard -W
        ${{ steps.composer.outputs.dir-bin }}/phpcs -i
        ${{ steps.composer.outputs.dir-bin }}/phpcs --config-show
        sleep 20000
        ${{ steps.composer.outputs.dir-bin }}/phpcs --config-set installed_paths ../../magento/magento-coding-standard/,../../phpcompatibility/php-compatibility,../../magento/php-compatibility-fork,${{ github.action_path }}/Ecommerce121
      shell: bash
    - name: Save Composer Cache
      if: ${{ steps.cache.outputs.cache-hit != 'true' && inputs.skip-cache != 'true' }}
      uses: actions/cache/save@v3
      with:
        path: ${{ steps.composer.outputs.dir-cache }}
        key: ${{ runner.os }};magento-coding-standard=${{ inputs.magento-coding-standard-version }};
    - name: Add problem matcher
      run: echo '::add-matcher::${{ github.action_path }}/problem-matcher.json'
      shell: bash
    - name: Run specific ruleset
      if:  ${{ inputs.phpcs-ruleset }}
      run: >
        ${{ steps.composer.outputs.dir-bin }}/phpcs --report=checkstyle --extensions=${{ inputs.phpcs-extensions }} --standard=$GITHUB_WORKSPACE${{ inputs.phpcs-ruleset }} $GITHUB_WORKSPACE${{ inputs.path-to-code }}
      shell: bash
    - name: Run default ruleset
      if:  ${{ !inputs.phpcs-ruleset }}
      run: >
        ${{ steps.composer.outputs.dir-bin }}/phpcs --report=checkstyle --extensions=${{ inputs.phpcs-extensions }} --standard=${{ github.action_path }}/ruleset.xml $GITHUB_WORKSPACE${{ inputs.path-to-code }}
      shell: bash
    - name: Clean up
      run: |
        composer global remove dealerdirect/phpcodesniffer-composer-installer magento/magento-coding-standard
      shell: bash