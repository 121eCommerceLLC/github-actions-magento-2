name: Daily Checks for app/code/Ecommerce121

on:
  schedule:
    - cron: '0 0 * * *' # This will run the checks daily at midnight
  push: 
    branches:
      - integration 

jobs:
  check-directory:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, gd, xml, soap, zip, pdo_mysql
        tools: composer, cs2pr

    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Check PHP Syntax (Linting)
      run: find app/code/Ecommerce121 -name "*.php" -exec php -l {} \;
      continue-on-error: true

    - name: Validate Composer Files
      run: composer validate
      continue-on-error: true

    - name: Install Magento Coding Standards
      run: composer require --dev magento/magento-coding-standard
      continue-on-error: true

    - name: Check Magento Coding Standards with XML Report
      run: ./vendor/bin/phpcs app/code/Ecommerce121 --standard=Magento2 --report=xml --report-file=phpcs-report.xml
      continue-on-error: true

    - name: Install and Run PHPStan for Static Analysis with JSON Report
      run: |
        composer require --dev phpstan/phpstan
        ./vendor/bin/phpstan analyse app/code/Ecommerce121 --error-format=json > phpstan-report.json
      continue-on-error: true

    - name: Install and Run php-cs-fixer for Code Standards
      run: |
        composer require --dev friendsofphp/php-cs-fixer
        ./vendor/bin/php-cs-fixer fix app/code/Ecommerce121
      continue-on-error: true

    - name: Create PR for Fixes (if there are changes)
      env:
        BRANCH_NAME: fixes-branch-${{ github.run_id }}
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        git checkout -b $BRANCH_NAME
        git add app/code/Ecommerce121
        git commit -m "Automated fixes from GitHub Actions"
        git push origin HEAD
        curl \
        -X POST \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/pulls \
        -d '{
          "title": "Automated Fixes",
          "head": "'"$BRANCH_NAME"'",
          "base": "integration",
          "body": "This PR contains automated fixes generated by GitHub Actions."
        }'
      continue-on-error: true

    - name: Archive code quality reports
      if: always() # This ensures that this step runs even if previous steps fail
      uses: actions/upload-artifact@v2
      with:
        name: code-quality-reports
        path: |
          phpcs-report.xml
          phpstan-report.json
