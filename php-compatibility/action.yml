name: 'PHP Compatibility'
author: '121eCommerce LLC'
description: 'Performs PHP static code analysis with the PHP Compatibility Standard'
branding:
  icon: 'code'
  color: 'green'
inputs:
  php-version:
    description: 'PHP Version'
    required: false
    default: '8.2'
  php-extensions:
    description: 'PHP Extensions'
    required: false
    default: 'gd, bcmath, soap, pdo_mysql, ctype, curl, dom, hash, iconv, intl, mbstring, openssl, simplexml, xsl, sockets, zip'
  composer-version:
    description: 'Composer Version'
    required: false
    default: 'v2'
  php-compatibility-version:
    description: 'PHP Compatibility Composer Version.'
    required: false
    default: '10.x-dev'
  path-to-code:
    description: 'Relative path to the code.'
    required: false
    default: '/'
  php-compatibility-ruleset:
    description: 'Relative path to ruleset file.'
    required: false
    default: ''
  php-compatibility-test-versions:
    description: 'PHP Compatibility testVersions.'
    required: false
    default: '8.2-'
  skip-cache:
    description: 'Skip composer cache.'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - name: Setup PHP Action
      uses: shivammathur/setup-php@v2
      with:
        coverage: none
        php-version: ${{ inputs.php-version }}
        tools: composer:${{ inputs.composer-version }}
        extensions: ${{ inputs.php-extensions }}
    - name: Get Composer global directories
      id: composer
      run: |
        echo "dir-cache=$(composer global config cache-files-dir --absolute --quiet)" >> $GITHUB_OUTPUT
        echo "dir-bin=$(composer global config bin-dir --absolute --quiet)" >> $GITHUB_OUTPUT
        echo "dir-vendor=$(composer global config vendor-dir --absolute --quiet)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Restore Composer Cache
      if: ${{ inputs.skip-cache != 'true' }}
      id: cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ steps.composer.outputs.dir-cache }}
        key: ${{ runner.os }};php-compatibility=${{ inputs.php-compatibility-version }};
    - name: Require PHP Compatibility
      run: |
        composer global config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer global require phpcompatibility/php-compatibility:${{ inputs.php-compatibility-version }}
      shell: bash
    - name: Save Composer Cache
      if: ${{ steps.cache.outputs.cache-hit != 'true' && inputs.skip-cache != 'true' }}
      uses: actions/cache/save@v3
      with:
        path: ${{ steps.composer.outputs.dir-cache }}
        key: ${{ runner.os }};php-compatibility=${{ inputs.php-compatibility-version }};
    - name: Add problem matcher
      run: echo '::add-matcher::${{ github.action_path }}/problem-matcher.json'
      shell: bash
    - name: Run specific ruleset
      if:  ${{ inputs.php-compatibility-ruleset }}
      run: >
        ${{ steps.composer.outputs.dir-bin }}/phpcs
        --report=checkstyle
        --extensions=php,phtml
        --standard=${{ github.workspace }}${{ inputs.ruleset }}
        --runtime-set testVersion ${{ inputs.php-compatibility-test-versions }}
        ${{ github.workspace }}${{ inputs.path-to-code }}
      shell: bash
    - name: Run default ruleset
      if:  ${{ !inputs.php-compatibility-ruleset }}
      run: >
        ${{ steps.composer.outputs.dir-bin }}/phpcs
        --report=checkstyle
        --extensions=php,phtml
        --standard=${{ github.action_path }}/ruleset.xml
        --runtime-set testVersion ${{ inputs.php-compatibility-test-versions }}
        ${{ github.workspace }}${{ inputs.path-to-code }}
      shell: bash
