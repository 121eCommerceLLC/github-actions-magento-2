name: 'PHP Compatibility'
author: '121eCommerce LLC'
description: 'Performs PHP static code analysis with the PHP Compatibility Standard'
branding:
  icon: 'code'
  color: 'green'
inputs:
  php_version:
    description: 'PHP Version'
    required: false
    default: '8.2'
  php_extensions:
    description: 'PHP Extensions'
    required: false
    default: 'gd, bcmath, soap, pdo_mysql, ctype, curl, dom, hash, iconv, intl, mbstring, openssl, simplexml, xsl, sockets, zip'
  composer_version:
    description: 'Composer Version'
    required: false
    default: 'v2'
  path_to_code:
    description: 'Relative path to the code.'
    required: false
    default: '/'
  ruleset:
    description: 'Relative path to ruleset file.'
    required: false
    default: ''
  php-compatibility-version:
    description: 'PHP Compatibility Composer Version.'
    required: false
    default: '10.x-dev'
  php-compatibility-test-versions:
    description: 'PHP Compatibility testVersions.'
    required: false
    default: '7.4-'
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - name: Setup PHP Action
      uses: shivammathur/setup-php@v2
      with:
        coverage: none
        php-version: ${{ inputs.php_version }}
        tools: composer:${{ inputs.composer_version }}
        extensions: ${{ inputs.php_extensions }}
    - name: Get composer global cache directory
      id: composer-cache
      run: echo "dir-cache=$(composer global config cache-files-dir --absolute --quiet)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Cache global dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir-cache }}
        key: ${{ runner.os }}-php-compatibility-${{ inputs.php-compatibility-version }}
        restore-keys: ${{ runner.os }}-php-compatibility-${{ inputs.php-compatibility-version }}
    - name: Require PHP Compatibility
      run: |
        composer global config --no-plugins allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
        composer global require phpcompatibility/php-compatibility:${{ inputs.php-compatibility-version }}
      shell: bash
    - name: Get composer bin directory
      id: composer-bin
      run: echo "dir-bin=$(composer global config bin-dir --absolute --quiet)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Add problem matcher
      run: echo '::add-matcher::${{ github.action_path }}/problem-matcher.json'
      shell: bash
    - name: Run specific ruleset
      if:  ${{ inputs.ruleset }}
      run: >
        ${{ steps.composer-bin.outputs.dir-bin }}/phpcs
        --report=checkstyle
        --extensions=php,phtml
        --standard=${{ github.workspace }}${{ inputs.ruleset }}
        --runtime-set testVersion ${{ inputs.php-compatibility-test-versions }}
        ${{ github.workspace }}${{ inputs.path_to_code }}
      shell: bash
    - name: Run default ruleset
      if:  ${{ !inputs.ruleset }}
      run: >
        ${{ steps.composer-bin.outputs.dir-bin }}/phpcs
        --report=checkstyle
        --extensions=php,phtml
        --standard=${{ github.action_path }}/ruleset.xml
        --runtime-set testVersion ${{ inputs.php-compatibility-test-versions }}
        ${{ github.workspace }}${{ inputs.path_to_code }}
      shell: bash
